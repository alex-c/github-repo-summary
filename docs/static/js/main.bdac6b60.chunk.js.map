{"version":3,"sources":["actions/actionTypeKeys.ts","reducer.ts","components/UserSummary.tsx","components/RepositoriesSummary.tsx","components/RepositoryView.tsx","components/RepositoryList.tsx","components/Summary.tsx","services/api.js","components/App.tsx","index.tsx"],"names":["ActionTypeKeys","initialState","user","login","name","bio","location","company","blog","email","avatarUrl","htmlUrl","publicRepos","publicGists","followers","following","reposUrl","repositories","language_statistics","UserSummary","props","react_default","a","createElement","card","id","elevation","Elevation","TWO","src","alt","href","target","rel","icon","IconNames","MAP_MARKER","OFFICE","ENVELOPE","LINK","tag","GIT_BRANCH","DOCUMENT","USER","RepositoriesSummary","languageStatistics","callout","intent","Intent","PRIMARY","PIE_CHART","language_count","repository_count","className","react_vis_es","data","languages","map","language","angle","count","label","reverse","showLabels","colorDomain","width","height","orientation","items","title","concat","RepositoryView","repository","fork","GIT_REPO","html_url","CODE","description","STAR","stargazers_count","EYE_OPEN","watchers_count","forks","RepositoryList","_useState","useState","_useState2","Object","slicedToArray","viewMode","setViewMode","length","buttons","text","onClick","TH","GRID_VIEW","index","components_RepositoryView","key","htmlTable","bordered","striped","Summary","useSelector","state","shallowEqual","components_UserSummary","components_RepositoriesSummary","components_RepositoryList","nonIdealState","DISABLE","api","getUser","_getUser","asyncToGenerator","regenerator_default","mark","_callee","userName","wrap","_context","prev","next","axios","get","sent","abrupt","stop","_x","apply","this","arguments","getUserRepositories","url","page","App","dispatch","useDispatch","setUserName","_useState3","_useState4","popoverVisible","setPopoverVisible","handleSearch","then","result","type","SET_USER","avatar_url","public_repos","public_gists","repos_url","numberOfRepos","promises","push","Promise","all","values","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","value","toConsumableArray","err","return","processLoadedRepos","catch","setInterval","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop","find","_iterator2","unknownLanguage","sort","language1","language2","SET_LANGUAGE_STATISTICS","statistics","SET_REPOSITORIES","inputButtons","tooltip","content","minimal","WARNING","navbar","Group","align","Alignment","LEFT","Heading","RIGHT","popover","position","PopoverPosition","BOTTOM","isOpen","inputGroup","placeholder","rightElement","onChange","event","onKeyPress","charCode","ERROR","DANGER","style","float","color","Colors","RED1","Divider","components_Summary","FocusStyleManager","onlyShowFocusOnTabs","store","createStore","action","objectSpread","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"2HAAYA,+OCIZ,IAAMC,EAAe,CACnBC,KAAM,CACJC,MAAO,GACPC,KAAM,GACNC,IAAK,GACLC,SAAU,GACVC,QAAS,GACTC,KAAM,GACNC,MAAO,GACPC,UAAW,GACXC,QAAS,GACTC,YAAa,EACbC,YAAa,EACbC,UAAW,EACXC,UAAW,EACXC,SAAU,IAEZC,aAAc,GACdC,oBAAqB,wJCwCRC,MAzDf,SAAqBC,GACnB,IAAIlB,EAAakB,EAAMlB,KACvB,OACEmB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,eAAeC,UAAWC,IAAUC,KAC3CP,EAAAC,EAAAC,cAAA,OAAKE,GAAG,UACNJ,EAAAC,EAAAC,cAAA,OAAKM,IAAK3B,EAAKQ,UAAWoB,IAAI,wBAEhCT,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,SAAIrB,EAAKE,MADX,KACuB,IACrBiB,EAAAC,EAAAC,cAAA,KAAGQ,KAAM7B,EAAKS,QAASqB,OAAO,SAASC,IAAI,uBACxC/B,EAAKC,QAGVkB,EAAAC,EAAAC,cAAA,SAAIrB,EAAKG,KACTgB,EAAAC,EAAAC,cAAA,SACoB,MAAjBrB,EAAKI,SACJe,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMA,KAAMC,IAAUC,aADxB,IACwClC,EAAKI,SAAU,KAGvD,GAEe,MAAhBJ,EAAKK,QACJc,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMA,KAAMC,IAAUE,SADxB,IACoCnC,EAAKK,QAAS,KAGlD,GAEa,MAAdL,EAAKO,MACJY,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMA,KAAMC,IAAUG,WADxB,IACsCpC,EAAKO,OAG3C,GAEa,KAAdP,EAAKM,KACJa,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMA,KAAMC,IAAUI,OAAS,IAC/BlB,EAAAC,EAAAC,cAAA,KAAGQ,KAAM7B,EAAKM,KAAMwB,OAAO,SAASC,IAAI,uBACrC/B,EAAKM,OAIV,IAGJa,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKN,KAAMC,IAAUM,YAArB,iBAAgDvC,EAAKU,aACrDS,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKN,KAAMC,IAAUO,UAArB,UAAuCxC,EAAKW,aAC5CQ,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKN,KAAMC,IAAUQ,MAArB,cAAuCzC,EAAKY,WAC5CO,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAKN,KAAMC,IAAUQ,MAArB,cAAuCzC,EAAKa,+BCnBrC6B,MA/Bf,SAA6BxB,GAC3B,IAAIyB,EAAyCzB,EAAMyB,mBACnD,OACExB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,uBAAuBC,UAAWC,IAAUC,KACnDP,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAASC,OAAQC,IAAOC,QAASf,KAAMC,IAAUe,WAC9CL,EAAmBM,eADtB,wBAC2DN,EAAmBO,iBAD9E,kBAGA/B,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,qBACbhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CACEC,KAAMV,EAAmBW,UACtBC,IAAI,SAAAC,GACH,MAAO,CAAEC,MAAOD,EAASE,MAAOC,MAAOH,EAAStD,QAEjD0D,UACHC,YAAY,EACZC,YAAa,CAAC,EAAG,EAAG,GACpBC,MAAO,IACPC,OAAQ,MAEV7C,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CACEa,YAAY,aACZC,MAAOvB,EAAmBW,UAAUC,IAAI,SAAAC,GACtC,MAAO,CAAEW,MAAK,GAAAC,OAAKZ,EAAStD,KAAd,MAAAkE,OAAuBZ,EAASE,UAEhDK,MAAO,kBCQFM,MAjCf,SAAwBnD,GACtB,IAAMoD,EAAyBpD,EAAMoD,WACrC,OACEnD,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,cACbhC,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,qBACbhC,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMA,KAAMsC,EAAWC,KAAOtC,IAAUM,WAAaN,IAAUuC,WAC/DrD,EAAAC,EAAAC,cAAA,KAAGQ,KAAMyC,EAAWG,SAAU3C,OAAO,SAASC,IAAI,uBAC/CuC,EAAWpE,MAEW,OAAxBoE,EAAWd,SACVrC,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,kBACbhC,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMA,KAAMC,IAAUyC,OACrBJ,EAAWd,UAGd,IAGJrC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAIiD,EAAWK,cAEjBxD,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,qBACbhC,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMA,KAAMC,IAAU2C,OACrBN,EAAWO,iBACZ1D,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMA,KAAMC,IAAU6C,WACrBR,EAAWS,eACZ5D,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMA,KAAMC,IAAUM,aACrB+B,EAAWU,SCuCLC,MAjEf,SAAwB/D,GACtB,IAAMH,EAA6BG,EAAMH,aADPmE,EAGFC,mBAAS,SAHPC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAG3BK,EAH2BH,EAAA,GAGjBI,EAHiBJ,EAAA,GASlC,OACEjE,EAAAC,EAAAC,cAAA,WACGN,EAAa0E,OAAS,EACrBtE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,kBAAkBC,UAAWC,IAAUC,KAC9CP,EAAAC,EAAAC,cAAA,OAAKE,GAAG,0BACNJ,EAAAC,EAAAC,cAAA,OAAKE,GAAG,4BACNJ,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEC,KAAmB,UAAbJ,EAAuB,aAAe,aAC5CK,QAZS,WACEJ,EAAV,UAAbD,EAAmC,QAAuB,UAY9CvD,KAAmB,UAAbuD,EAAuBtD,IAAU4D,GAAK5D,IAAU6D,aAG1D3E,EAAAC,EAAAC,cAAA,2BAEFF,EAAAC,EAAAC,cAAA,OAAKE,GAAG,2BACQ,UAAbgE,EACCxE,EAAawC,IAAI,SAACe,EAAYyB,GAAb,OAAuB5E,EAAAC,EAAAC,cAAC2E,EAAD,CAAgB1B,WAAYA,EAAY2B,IAAKF,MAErF5E,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAWC,UAAU,EAAMC,SAAS,GAClCjF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,sBAGJF,EAAAC,EAAAC,cAAA,aACGN,EAAawC,IAAI,SAACe,EAAYyB,GAAb,OAChB5E,EAAAC,EAAAC,cAAA,MAAI4E,IAAKF,GACP5E,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGQ,KAAMyC,EAAWG,SAAU3C,OAAO,SAASC,IAAI,uBAC/CuC,EAAWpE,OAGhBiB,EAAAC,EAAAC,cAAA,UAAKiD,EAAWK,aAChBxD,EAAAC,EAAAC,cAAA,UAAKiD,EAAWd,UAChBrC,EAAAC,EAAAC,cAAA,UAAKiD,EAAWO,kBAChB1D,EAAAC,EAAAC,cAAA,UAAKiD,EAAWS,gBAChB5D,EAAAC,EAAAC,cAAA,UAAKiD,EAAWU,cAS9B7D,EAAAC,EAAAC,cAAA,wBCtBOgF,MAjCf,WACE,IAAMrG,EAAasG,YAAY,SAACC,GAAD,OAAqBA,EAAMvG,MAAMwG,KAC1DzF,EAAeuF,YAAY,SAACC,GAAD,OAAqBA,EAAMxF,eACtD4B,EAAqB2D,YAAY,SAACC,GAAD,OAAqBA,EAAMvF,sBAClE,OACEG,EAAAC,EAAAC,cAAA,QAAM8B,UAAU,YACE,KAAfnD,EAAKC,MACJkB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoF,EAAD,CAAazG,KAAMA,IACM,IAAxBe,EAAa0E,OACZtE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqF,EAAD,CAAqB/D,mBAAoBA,IACzCxB,EAAAC,EAAAC,cAACsF,EAAD,CAAgB5F,aAAcA,KAGhCI,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CACE5E,KAAMC,IAAU4E,QAChB1C,MAAM,mBACNQ,YAAY,0CAKlBxD,EAAAC,EAAAC,cAACuF,EAAA,EAAD,CACE5E,KAAMC,IAAU4E,QAChB1C,MAAM,oBACNQ,YAAY,kGClCPmC,EAAA,CACbC,QAAO,eAAAC,EAAA3B,OAAA4B,EAAA,EAAA5B,CAAA6B,EAAA9F,EAAA+F,KAAE,SAAAC,EAAMC,GAAN,IAAArH,EAAA,OAAAkH,EAAA9F,EAAAkG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACUC,IAAMC,IAAN,gCAAAvD,OAA0CiD,IADpD,cACHrH,EADGuH,EAAAK,KAAAL,EAAAM,OAAA,SAEA7H,EAAKqD,MAFL,wBAAAkE,EAAAO,SAAAV,MAAF,gBAAAW,GAAA,OAAAf,EAAAgB,MAAAC,KAAAC,YAAA,GAKPC,oBAAqB,SAACC,EAAKC,GACzB,OAAOX,IAAMC,IAAN,GAAAvD,OAAagE,EAAb,UAAAhE,OAAyBiE,EAAzB,oBC6JIC,MA9If,WACE,IAAMC,EAAWC,cADJtD,EAGmBC,mBAAS,IAH5BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGNmC,EAHMjC,EAAA,GAGIqD,EAHJrD,EAAA,GAAAsD,EAI+BvD,oBAAS,GAJxCwD,EAAAtD,OAAAC,EAAA,EAAAD,CAAAqD,EAAA,GAINE,EAJMD,EAAA,GAIUE,EAJVF,EAAA,GAMPG,EAAe,WACF,KAAbzB,GACFP,EACGC,QAAQM,GACR0B,KAAK,SAAAC,GACJT,EAAS,CACPU,KAAMnJ,EAAeoJ,SACrBlJ,KAAM,CACJC,MAAO+I,EAAO/I,MACdC,KAAM8I,EAAO9I,KACbC,IAAK6I,EAAO7I,IACZC,SAAU4I,EAAO5I,SACjBC,QAAS2I,EAAO3I,QAChBC,KAAM0I,EAAO1I,KACbC,MAAOyI,EAAOzI,MACdC,UAAWwI,EAAOG,WAClB1I,QAASuI,EAAOvE,SAChB/D,YAAasI,EAAOI,aACpBzI,YAAaqI,EAAOK,aACpBzI,UAAWoI,EAAOpI,UAClBC,UAAWmI,EAAOnI,UAClBC,SAAUkI,EAAOM,aAMrB,IAHA,IAAIC,EAAgBP,EAAOI,aACvBf,EAAO,EACPmB,EAAqB,GAClBD,EAAgB,GACrBC,EAASC,KAAK3C,EAAIqB,oBAAoBa,EAAOM,UAAWjB,IACxDkB,GAAiB,IACjBlB,IAEFqB,QAAQC,IAAIH,GAAUT,KAAK,SAACa,GAC1B,IAAI7I,EAA6B,GADW8I,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAE5C,QAAAC,EAAAC,EAAkBN,EAAlBO,OAAAC,cAAAP,GAAAI,EAAAC,EAAAzC,QAAA4C,MAAAR,GAAA,EAA0B,KAAjBS,EAAiBL,EAAAK,MACxBvJ,EAAa0I,KAAbzB,MAAAjH,EAAYsE,OAAAkF,EAAA,EAAAlF,CAASiF,EAAMjH,QAHe,MAAAmH,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAK5CW,EAAmB3J,OAGtB4J,MAAM,WACL9B,GAAkB,GAClB+B,YAAY,kBAAM/B,GAAkB,IAAQ,QAK9C6B,EAAqB,SAAC3J,GAC1B,IAAMuC,EAAwB,GAD2BuH,GAAA,EAAAC,GAAA,EAAAC,OAAAf,EAAA,IAIzD,IAJyD,IAIzDgB,EAJyDC,EAAA,eAIhD3G,EAJgD0G,EAAAV,MAKjD9G,EAAWF,EAAU4H,KAAK,SAAA1H,GAAQ,OAAIA,EAAStD,OAASoE,EAAWd,gBACxDwG,IAAbxG,EACFF,EAAUmG,KAAK,CACbvJ,KAAMoE,EAAWd,SACjBE,MAAO,IAGTF,EAASE,SARbyH,EAAuBpK,EAAvBoJ,OAAAC,cAAAS,GAAAG,EAAAG,EAAA1D,QAAA4C,MAAAQ,GAAA,EAAqCI,IAJoB,MAAAT,GAAAM,GAAA,EAAAC,EAAAP,EAAA,YAAAK,GAAA,MAAAM,EAAAV,QAAAU,EAAAV,SAAA,WAAAK,EAAA,MAAAC,GAiBzD,IAAMK,EAAkB9H,EAAU4H,KAAK,SAAA1H,GAAQ,OAAsB,OAAlBA,EAAStD,YACpC8J,IAApBoB,IACFA,EAAgBlL,KAAO,WAIzBoD,EAAU+H,KAAK,SAACC,EAAWC,GAAZ,OAA0BA,EAAU7H,MAAQ4H,EAAU5H,QAGrE6E,EAAS,CACPU,KAAMnJ,EAAe0L,wBACrBC,WAAY,CAAEnI,YAAWL,eAAgBK,EAAUmC,OAAQvC,iBAAkBnC,EAAa0E,UAE5F8C,EAAS,CACPU,KAAMnJ,EAAe4L,iBACrB3K,aAAcA,KAIZ4K,EACJxK,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACuK,EAAA,EAAD,CAASC,QAAQ,UACf1K,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAQ1D,KAAK,SAASa,OAAQC,IAAOC,QAAS+I,SAAS,EAAMlG,QAASkD,KAExE3H,EAAAC,EAAAC,cAACuK,EAAA,EAAD,CAASC,QAAQ,SACf1K,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAQ1D,KAAK,QAAQa,OAAQC,IAAOiJ,QAASD,SAAS,EAAMlG,QAAS,kBAAM6C,EAAY,SAK7F,OACEtH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2K,EAAA,EAAD,KACE7K,EAAAC,EAAAC,cAAA,OAAK8B,UAAU,YACbhC,EAAAC,EAAAC,cAAC2K,EAAA,EAAOC,MAAR,CAAcC,MAAOC,IAAUC,MAC7BjL,EAAAC,EAAAC,cAAC2K,EAAA,EAAOK,QAAR,6BAEFlL,EAAAC,EAAAC,cAAC2K,EAAA,EAAOC,MAAR,CAAcC,MAAOC,IAAUG,OAC7BnL,EAAAC,EAAAC,cAACkL,EAAA,EAAD,CAASC,SAAUC,IAAgBC,OAAQC,OAAQ/D,GACjDzH,EAAAC,EAAAC,cAACuL,EAAA,EAAD,CACEC,YAAY,mBACZC,aAAcnB,EACdrB,MAAOjD,EACP0F,SAAU,SAACC,GAAD,OAA4BvE,EAAYuE,EAAMlL,OAAOwI,QAC/D2C,WAAY,SAAAD,GACa,KAAnBA,EAAME,UACRpE,OAIN3H,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMA,KAAMC,IAAUkL,MAAOtK,OAAQC,IAAOsK,OAAQC,MAAO,CAAEC,MAAO,UACpEnM,EAAAC,EAAAC,cAAA,iBACOF,EAAAC,EAAAC,cAAA,QAAMgM,MAAO,CAAEE,MAAOC,IAAOC,OAASpG,GAD7C,0BAKJlG,EAAAC,EAAAC,cAAC2K,EAAA,EAAO0B,QAAR,MACAvM,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACE1D,KAAK,WACL2D,KAAK,SACL9D,KAAK,gDACLC,OAAO,cAKfX,EAAAC,EAAAC,cAACsM,EAAD,eCjJNC,IAAkBC,sBAGlB,IAAMC,EAAQC,YRMC,WAAsE,IAArDxH,EAAqD2B,UAAAzC,OAAA,QAAAuE,IAAA9B,UAAA,GAAAA,UAAA,GAAnCnI,EAAciO,EAAqB9F,UAAAzC,OAAA,EAAAyC,UAAA,QAAA8B,EACnF,OAAQgE,EAAO/E,MACb,KAAKnJ,EAAeoJ,SAClB,OAAO7D,OAAA4I,EAAA,EAAA5I,CAAA,GACFkB,EADL,CAEEvG,KAAMgO,EAAOhO,OAEjB,KAAKF,EAAe4L,iBAClB,OAAOrG,OAAA4I,EAAA,EAAA5I,CAAA,GACFkB,EADL,CAEExF,aAAciN,EAAOjN,eAEzB,KAAKjB,EAAe0L,wBAClB,OAAOnG,OAAA4I,EAAA,EAAA5I,CAAA,GACFkB,EADL,CAEEvF,oBAAqBgN,EAAOvC,aAEhC,QACE,OAAOlF,KQrBb2H,IAASC,OACPhN,EAAAC,EAAAC,cAAC+M,EAAA,EAAD,CAAUN,MAAOA,GACf3M,EAAAC,EAAAC,cAACgN,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.bdac6b60.chunk.js","sourcesContent":["export enum ActionTypeKeys {\r\n    SET_USER = \"SET_USER\",\r\n    SET_REPOSITORIES = \"SET_REPOSITORIES\",\r\n    SET_LANGUAGE_STATISTICS = \"SET_LANGUAGE_STATISTICS\",\r\n    OTHER_ACTION = \"__any_other_action_type__\"\r\n}","import { ActionTypes } from './actions/actionTypes';\r\nimport { ActionTypeKeys } from './actions/actionTypeKeys';\r\nimport { AppState } from './models/AppState';\r\n\r\nconst initialState = {\r\n  user: {\r\n    login: '',\r\n    name: '',\r\n    bio: '',\r\n    location: '',\r\n    company: '',\r\n    blog: '',\r\n    email: '',\r\n    avatarUrl: '',\r\n    htmlUrl: '',\r\n    publicRepos: 0,\r\n    publicGists: 0,\r\n    followers: 0,\r\n    following: 0,\r\n    reposUrl: '',\r\n  },\r\n  repositories: [],\r\n  language_statistics: null,\r\n};\r\n\r\nexport default function reducer(state: AppState = initialState, action: ActionTypes) {\r\n  switch (action.type) {\r\n    case ActionTypeKeys.SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case ActionTypeKeys.SET_REPOSITORIES:\r\n      return {\r\n        ...state,\r\n        repositories: action.repositories,\r\n      };\r\n    case ActionTypeKeys.SET_LANGUAGE_STATISTICS:\r\n      return {\r\n        ...state,\r\n        language_statistics: action.statistics,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Card, Elevation, Icon, Tag } from '@blueprintjs/core';\r\nimport { User } from '../models/User';\r\nimport { IconNames } from '@blueprintjs/icons';\r\n\r\nfunction UserSummary(props: any) {\r\n  let user: User = props.user;\r\n  return (\r\n    <Card id=\"user-summary\" elevation={Elevation.TWO}>\r\n      <div id=\"avatar\">\r\n        <img src={user.avatarUrl} alt=\"Github user avatar\" />\r\n      </div>\r\n      <p>\r\n        <b>{user.name}</b> /{' '}\r\n        <a href={user.htmlUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {user.login}\r\n        </a>\r\n      </p>\r\n      <p>{user.bio}</p>\r\n      <p>\r\n        {user.location != null ? (\r\n          <span>\r\n            <Icon icon={IconNames.MAP_MARKER} /> {user.location}{' '}\r\n          </span>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {user.company != null ? (\r\n          <span>\r\n            <Icon icon={IconNames.OFFICE} /> {user.company}{' '}\r\n          </span>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {user.email != null ? (\r\n          <span>\r\n            <Icon icon={IconNames.ENVELOPE} /> {user.email}\r\n          </span>\r\n        ) : (\r\n          ''\r\n        )}\r\n        {user.blog !== '' ? (\r\n          <span>\r\n            <Icon icon={IconNames.LINK} />{' '}\r\n            <a href={user.blog} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              {user.blog}\r\n            </a>\r\n          </span>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </p>\r\n      <div>\r\n        <Tag icon={IconNames.GIT_BRANCH}>Repositories: {user.publicRepos}</Tag>\r\n        <Tag icon={IconNames.DOCUMENT}>Gists: {user.publicGists}</Tag>\r\n        <Tag icon={IconNames.USER}>Followers: {user.followers}</Tag>\r\n        <Tag icon={IconNames.USER}>Following: {user.following}</Tag>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default UserSummary;\r\n","import React from 'react';\r\nimport { RadialChart, DiscreteColorLegend } from 'react-vis';\r\nimport { Card, Elevation, Callout, Intent } from '@blueprintjs/core';\r\nimport { LanguageStatistics } from '../models/LanguageStatistics';\r\nimport { IconNames } from '@blueprintjs/icons';\r\n\r\nfunction RepositoriesSummary(props: any) {\r\n  let languageStatistics: LanguageStatistics = props.languageStatistics;\r\n  return (\r\n    <Card id=\"repositories-summary\" elevation={Elevation.TWO}>\r\n      <Callout intent={Intent.PRIMARY} icon={IconNames.PIE_CHART}>\r\n        {languageStatistics.language_count} languages used over {languageStatistics.repository_count} repositories.\r\n      </Callout>\r\n      <div className=\"flex-card-section\">\r\n        <RadialChart\r\n          data={languageStatistics.languages\r\n            .map(language => {\r\n              return { angle: language.count, label: language.name };\r\n            })\r\n            .reverse()}\r\n          showLabels={true}\r\n          colorDomain={[0, 1, 2]}\r\n          width={300}\r\n          height={300}\r\n        />\r\n        <DiscreteColorLegend\r\n          orientation=\"horizontal\"\r\n          items={languageStatistics.languages.map(language => {\r\n            return { title: `${language.name}: ${language.count}` };\r\n          })}\r\n          width={300}\r\n        />\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default RepositoriesSummary;\r\n","import React from 'react';\r\nimport { Repository } from '../models/Repository';\r\nimport { Icon } from '@blueprintjs/core';\r\nimport { IconNames } from '@blueprintjs/icons';\r\n\r\nfunction RepositoryView(props: any) {\r\n  const repository: Repository = props.repository;\r\n  return (\r\n    <div className=\"repository\">\r\n      <div className=\"repository-header\">\r\n        <Icon icon={repository.fork ? IconNames.GIT_BRANCH : IconNames.GIT_REPO} />\r\n        <a href={repository.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {repository.name}\r\n        </a>\r\n        {repository.language !== null ? (\r\n          <div className=\"repository-tag\">\r\n            <Icon icon={IconNames.CODE} />\r\n            {repository.language}\r\n          </div>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </div>\r\n      <div>\r\n        <i>{repository.description}</i>\r\n      </div>\r\n      <div className=\"repository-footer\">\r\n        <Icon icon={IconNames.STAR} />\r\n        {repository.stargazers_count}\r\n        <Icon icon={IconNames.EYE_OPEN} />\r\n        {repository.watchers_count}\r\n        <Icon icon={IconNames.GIT_BRANCH} />\r\n        {repository.forks}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RepositoryView;\r\n","import React, { useState } from 'react';\r\nimport { Card, Elevation, Button, HTMLTable } from '@blueprintjs/core';\r\nimport { Repository } from '../models/Repository';\r\nimport RepositoryView from './RepositoryView';\r\nimport { IconNames } from '@blueprintjs/icons';\r\n\r\nfunction RepositoryList(props: any) {\r\n  const repositories: Repository[] = props.repositories;\r\n\r\n  const [viewMode, setViewMode] = useState('tiles');\r\n\r\n  const toggleViewMode = () => {\r\n    viewMode === 'tiles' ? setViewMode('table') : setViewMode('tiles');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {repositories.length > 0 ? (\r\n        <Card id=\"repository-list\" elevation={Elevation.TWO}>\r\n          <div id=\"repository-list-header\">\r\n            <div id=\"repository-list-controls\">\r\n              <Button\r\n                text={viewMode === 'tiles' ? 'View table' : 'View tiles'}\r\n                onClick={toggleViewMode}\r\n                icon={viewMode === 'tiles' ? IconNames.TH : IconNames.GRID_VIEW}\r\n              />\r\n            </div>\r\n            <h2>Repositories</h2>\r\n          </div>\r\n          <div id=\"repository-list-content\">\r\n            {viewMode === 'tiles' ? (\r\n              repositories.map((repository, index) => <RepositoryView repository={repository} key={index} />)\r\n            ) : (\r\n              <HTMLTable bordered={true} striped={true}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Repository</th>\r\n                    <th>Description</th>\r\n                    <th>Language</th>\r\n                    <th>Stars</th>\r\n                    <th>Watchers</th>\r\n                    <th>Forked</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {repositories.map((repository, index) => (\r\n                    <tr key={index}>\r\n                      <td>\r\n                        <a href={repository.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                          {repository.name}\r\n                        </a>\r\n                      </td>\r\n                      <td>{repository.description}</td>\r\n                      <td>{repository.language}</td>\r\n                      <td>{repository.stargazers_count}</td>\r\n                      <td>{repository.watchers_count}</td>\r\n                      <td>{repository.forks}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </HTMLTable>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      ) : (\r\n        <span />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RepositoryList;\r\n","import React from 'react';\r\nimport { useSelector, shallowEqual } from 'react-redux';\r\nimport { AppState } from '../models/AppState';\r\nimport UserSummary from './UserSummary';\r\nimport { User } from '../models/User';\r\nimport RepositoriesSummary from './RepositoriesSummary';\r\nimport RepositoryList from './RepositoryList';\r\nimport { NonIdealState } from '@blueprintjs/core';\r\nimport { IconNames } from '@blueprintjs/icons';\r\n\r\nfunction Summary() {\r\n  const user: User = useSelector((state: AppState) => state.user, shallowEqual);\r\n  const repositories = useSelector((state: AppState) => state.repositories);\r\n  const languageStatistics = useSelector((state: AppState) => state.language_statistics);\r\n  return (\r\n    <main className=\"viewport\">\r\n      {user.login !== '' ? (\r\n        <div>\r\n          <UserSummary user={user} />\r\n          {repositories.length !== 0 ? (\r\n            <div>\r\n              <RepositoriesSummary languageStatistics={languageStatistics} />\r\n              <RepositoryList repositories={repositories} />\r\n            </div>\r\n          ) : (\r\n            <NonIdealState\r\n              icon={IconNames.DISABLE}\r\n              title=\"No repositories.\"\r\n              description=\"The user has no public repositories.\"\r\n            />\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <NonIdealState\r\n          icon={IconNames.DISABLE}\r\n          title=\"No user selected.\"\r\n          description=\"Enter a Github user name in the search bar above!\"\r\n        />\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Summary;\r\n","import axios from 'axios';\r\n\r\nexport default {\r\n  getUser: async userName => {\r\n    let user = await axios.get(`https://api.github.com/users/${userName}`);\r\n    return user.data;\r\n  },\r\n\r\n  getUserRepositories: (url, page) => {\r\n    return axios.get(`${url}?page=${page}&per_page=100`);\r\n  },\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport {\r\n  Alignment,\r\n  Button,\r\n  AnchorButton,\r\n  Navbar,\r\n  Intent,\r\n  Tooltip,\r\n  InputGroup,\r\n  Popover,\r\n  PopoverPosition,\r\n  Card,\r\n  Icon,\r\n  Colors,\r\n} from '@blueprintjs/core';\r\nimport Summary from './Summary';\r\nimport api from '../services/api';\r\nimport { IconNames } from '@blueprintjs/icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ActionTypeKeys } from '../actions/actionTypeKeys';\r\nimport { Repository } from '../models/Repository';\r\nimport { Language } from '../models/Language';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [userName, setUserName] = useState('');\r\n  const [popoverVisible, setPopoverVisible] = useState(false);\r\n\r\n  const handleSearch = () => {\r\n    if (userName !== '') {\r\n      api\r\n        .getUser(userName)\r\n        .then(result => {\r\n          dispatch({\r\n            type: ActionTypeKeys.SET_USER,\r\n            user: {\r\n              login: result.login,\r\n              name: result.name,\r\n              bio: result.bio,\r\n              location: result.location,\r\n              company: result.company,\r\n              blog: result.blog,\r\n              email: result.email,\r\n              avatarUrl: result.avatar_url,\r\n              htmlUrl: result.html_url,\r\n              publicRepos: result.public_repos,\r\n              publicGists: result.public_gists,\r\n              followers: result.followers,\r\n              following: result.following,\r\n              reposUrl: result.repos_url,\r\n            },\r\n          });\r\n          let numberOfRepos = result.public_repos;\r\n          let page = 1;\r\n          let promises: object[] = [];\r\n          while (numberOfRepos > 0) {\r\n            promises.push(api.getUserRepositories(result.repos_url, page));\r\n            numberOfRepos -= 100;\r\n            page++;\r\n          }\r\n          Promise.all(promises).then((values: any[]) => {\r\n            let repositories: Repository[] = [];\r\n            for (let value of values) {\r\n              repositories.push(...value.data);\r\n            }\r\n            processLoadedRepos(repositories);\r\n          });\r\n        })\r\n        .catch(() => {\r\n          setPopoverVisible(true);\r\n          setInterval(() => setPopoverVisible(false), 2000);\r\n        });\r\n    }\r\n  };\r\n\r\n  const processLoadedRepos = (repositories: Repository[]) => {\r\n    const languages: Language[] = [];\r\n\r\n    // Find unique languages and count the number of repos for each\r\n    for (let repository of repositories) {\r\n      const language = languages.find(language => language.name === repository.language);\r\n      if (language === undefined) {\r\n        languages.push({\r\n          name: repository.language,\r\n          count: 1,\r\n        });\r\n      } else {\r\n        language.count++;\r\n      }\r\n    }\r\n\r\n    // Handle the `null` language\r\n    const unknownLanguage = languages.find(language => language.name === null);\r\n    if (unknownLanguage !== undefined) {\r\n      unknownLanguage.name = 'Unknown';\r\n    }\r\n\r\n    // Sort by most used language\r\n    languages.sort((language1, language2) => language2.count - language1.count);\r\n\r\n    // Dispatch full repo list and language stats\r\n    dispatch({\r\n      type: ActionTypeKeys.SET_LANGUAGE_STATISTICS,\r\n      statistics: { languages, language_count: languages.length, repository_count: repositories.length },\r\n    });\r\n    dispatch({\r\n      type: ActionTypeKeys.SET_REPOSITORIES,\r\n      repositories: repositories,\r\n    });\r\n  };\r\n\r\n  const inputButtons = (\r\n    <span>\r\n      <Tooltip content=\"Search\">\r\n        <Button icon=\"search\" intent={Intent.PRIMARY} minimal={true} onClick={handleSearch} />\r\n      </Tooltip>\r\n      <Tooltip content=\"Clear\">\r\n        <Button icon=\"cross\" intent={Intent.WARNING} minimal={true} onClick={() => setUserName('')} />\r\n      </Tooltip>\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Navbar>\r\n        <div className=\"viewport\">\r\n          <Navbar.Group align={Alignment.LEFT}>\r\n            <Navbar.Heading>Github Repo Summary</Navbar.Heading>\r\n          </Navbar.Group>\r\n          <Navbar.Group align={Alignment.RIGHT}>\r\n            <Popover position={PopoverPosition.BOTTOM} isOpen={popoverVisible}>\r\n              <InputGroup\r\n                placeholder=\"Github user name\"\r\n                rightElement={inputButtons}\r\n                value={userName}\r\n                onChange={(event: { target: any }) => setUserName(event.target.value)}\r\n                onKeyPress={event => {\r\n                  if (event.charCode === 13) {\r\n                    handleSearch();\r\n                  }\r\n                }}\r\n              />\r\n              <Card>\r\n                <Icon icon={IconNames.ERROR} intent={Intent.DANGER} style={{ float: 'left' }} />\r\n                <p>\r\n                  User <span style={{ color: Colors.RED1 }}>{userName}</span> could not be found!\r\n                </p>\r\n              </Card>\r\n            </Popover>\r\n            <Navbar.Divider />\r\n            <AnchorButton\r\n              icon=\"git-repo\"\r\n              text=\"Github\"\r\n              href=\"https://github.com/alex-c/github-repo-summary\"\r\n              target=\"_blank\"\r\n            />\r\n          </Navbar.Group>\r\n        </div>\r\n      </Navbar>\r\n      <Summary />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Import Redux\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './reducer';\n\n// Import Blueprint\nimport { FocusStyleManager } from '@blueprintjs/core';\n\n// Set up App\nimport App from './components/App';\nimport './index.scss';\n\n// Set up Blueprint\nFocusStyleManager.onlyShowFocusOnTabs();\n\n// Set up store\nconst store = createStore(rootReducer);\n\n// Render!\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}